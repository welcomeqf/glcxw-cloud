<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true">

    <include resource="org/springframework/boot/logging/logback/base.xml"/>
    <logger name="com.sun" level="ERROR"/>
    <logger name="sun.rmi" level="ERROR"/>
    <logger name="javax.mail" level="ERROR"/>
    <logger name="org.bson" level="ERROR"/>
    <logger name="org.apache" level="ERROR"/>
    <logger name="com.alibaba.nacos" level="ERROR"/>
    <logger name="com.apache.ibatis" level="TRACE"/>
    <logger name="java.sql.Connection" level="DEBUG"/>
    <logger name="java.sql.Statement" level="DEBUG"/>
    <logger name="java.sql.PreparedStatement" level="DEBUG"/>


    <!-- 输出一： 控制台输出 -->
    <appender name="stdoutAppender" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- 输出二： 按照每天生成日志文件 -->
    <springProperty scope="context" name="log_home" source="logging.path"
                    defaultValue="logs"/>

    <springProperty scope="context" name="max_history" source="logging.file.max-history"
                    defaultValue="7"/>

    <springProperty scope="context" name="max_file_size" source="logging.file.max-size"
                    defaultValue="500MB"/>

    <appender name="fileInfoAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${log_home}/logger-%d{yyyy-MM-dd}/logger-info.log.%i</FileNamePattern>
            <!--日志文件保留天数,日志最大大小-->
            <maxHistory>${max_history}</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${max_file_size}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <layout class="ch.qos.logback.classic.PatternLayout">
            <Pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} -%msg%n
            </Pattern>
        </layout>
    </appender>

    <appender name="fileErrorAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${log_home}/logger-%d{yyyy-MM-dd}/logger-error.log.%i</FileNamePattern>
            <!--日志文件保留天数,日志最大大小-->
            <maxHistory>7</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>500MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <layout class="ch.qos.logback.classic.PatternLayout">
            <Pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} -%msg%n
            </Pattern>
        </layout>
    </appender>

    <!-- ELK日志输出 -->
    <appender name="elk" class="net.logstash.logback.appender.LogstashTcpSocketAppender">
        <destination>101.200.72.35:824</destination>
        <encoder charset="UTF-8" class="net.logstash.logback.encoder.LogstashEncoder" />
    </appender>

    <!-- 多环境日志输出-开发环境 -->
    <springProfile name="dev,mac-dev,win-dev,linux-dev">
    </springProfile>

    <!-- 多环境日志输出-测试环境 -->
    <springProfile name="sit">
        <root>
            <appender-ref ref="fileInfoAppender"/>
            <appender-ref ref="fileErrorAppender"/>
        </root>
    </springProfile>

    <!-- 多环境日志输出-生产环境 -->
    <springProfile name="prod">
        <root>
            <appender-ref ref="elk"/>
        </root>
    </springProfile>

</configuration>
